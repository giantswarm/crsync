name: Synchronize images between quay.io and docker.io

on: [push]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  install_crsynct:
    name: Install crsync
    runs-on: ubuntu-18.04
    env:
      BINARY: "crsync"
      DIR: "/opt/cache"
      IMAGE: "quay.io/giantswarm/crsync"
      IMAGE_PATH: "/crsync"
      VERSION: "0.2.0"
    outputs:
      cache_key: "${{ steps.get_cache_key.outputs.cache_key }}"
    steps:
      - name: Get cache key
        id: get_cache_key
        run: |
          cache_key="install-${{ env.BINARY }}-${{ env.VERSION }}"
          echo "::set-output name=cache_key::${cache_key}"
      - name: Cache
        id: cache
        uses: actions/cache@v1
        with:
          key: "${{ steps.get_cache_key.outputs.cache_key }}"
          path: "${{ env.DIR }}"
      - name: Download
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: |
          mkdir -p ${{ env.DIR }}
          docker container create --name tmp ${{ env.IMAGE }}:${{ env.VERSION }}
          docker cp tmp:${{ env.IMAGE_PATH }} ${{ env.DIR }}/${{ env.BINARY }}
          docker container rm tmp
      - name: Smoke test
        run: |
          ${{ env.DIR }}/${{ env.BINARY }} --help
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: "${{ env.BINARY }}"
          path: "${{ env.DIR }}/${{ env.BINARY }}"
  run_synchronization:
    name: Synchronize images with docker.io
    runs-on: ubuntu-18.04
    if: ${{ needs.gather_facts.outputs.unchanged == 'true' }}
    needs:
      - install_crsync
    steps:
      - name: Cache
        id: cache
        uses: actions/cache@v1
        with:
          key: "${{ needs.install_architect.outputs.cache_key }}+++${{ needs.install_hub.outputs.cache_key }}"
          path: /opt/bin
      - name: Download crsync artifact to /opt/bin
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        uses: actions/download-artifact@v2
        with:
          name: crsync
          path: /opt/bin
      - name: Prepare /opt/bin
        run: |
          chmod +x /opt/bin/crsync
          echo "::add-path::/opt/bin"
      - name: Run synchrnoizer
        env:
          REGISTRY_NAME: docker.io
          REGISTRY_USER: ${{ secrets.DOCKER_IO_USER }}
          REGISTRY_PASSWORD: ${{ secrets.DOCKER_IO_PASSWORD }}
          LAST_MODIFIED: 1h
        run: |
          crsync --dst-name "$REGISTRY_NAME" --dst-user "$REGISTRY_USER" --dst-password "$REGISTRY_PASSWORD" --last-modified "$LAST_MODIFIED"