apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "resource.default.name"  . }}
  namespace: {{ include "resource.default.namespace"  . }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      {{- include "labels.selector" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        releaseRevision: {{ .Release.Revision | quote }}
      labels:
        {{- include "labels.common" . | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - {{ include "name" . | quote }}
            topologyKey: "kubernetes.io/hostname"
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
      - args:
        - sync
        - --dst-name={{ .Values.destinationRegistry.name }}
        - --dst-user={{ .Values.destinationRegistry.credentials.user }}
        - --src-name={{ .Values.sourceRegistry.name }}
        - --src-user={{ .Values.sourceRegistry.credentials.user }}
        - --include-private-repositories={{ .Values.flags.includePrivateRepositories}}
        - --last-modified={{ .Values.flags.lastModified }}
        - --metrics-port={{ .Values.flags.metricsPort }}
        - --loop
        env:
        - name: DST_REGISTRY_PASSWORD
          valueFrom:
            secretKeyRef:
              key: destination-registry-password
              name: {{ include "resource.default.name"  . }}
        - name: SRC_REGISTRY_PASSWORD
          valueFrom:
            secretKeyRef:
              key: source-registry-password
              name: {{ include "resource.default.name"  . }}
        - name: QUAY_API_TOKEN
          valueFrom:
            secretKeyRef:
              key: quay-api-token
              name: {{ include "resource.default.name"  . }}
        image: "{{ .Values.Installation.V1.Registry.Domain }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: Always
        name: {{ include "resource.default.name"  . }}
        securityContext:
          seccompProfile:
            type: RuntimeDefault 
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: docker-socket
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 250m
            memory: 500Mi
        ports:
        - name: metrics
          containerPort: {{ .Values.flags.metricsPort }}
      serviceAccount: {{ include "resource.default.name"  . }}
      serviceAccountName: {{ include "resource.default.name"  . }}
      volumes:
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
